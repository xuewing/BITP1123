//Sequential.h

#ifndef SEQUENTIAL_H
#define SEQUENTIAL_H

const int SIZE = 100;
class Sequential
{
public: 
	int locationWanted;
	int array[SIZE];
	bool SequentialSearch(int[], int, int, int&);
};
#endif

//Sequential.cpp

#include <iostream>
using namespace std;
#include "Sequential.h"

bool Sequential::SequentialSearch(int array[], int SIZE, int target, int& locWanted)
{
	int index = 0;
	bool found = false;
	array[SIZE] = target;

	while (array[index] != target)
			index++;
		if (index!=SIZE)
		{
			found = true;
			locWanted = index;
		}
	
	return found;
}

//SequentialMain.cpp

#include <iostream>
using namespace std;
#include "Sequential.h"

void main()
{
	int target = 0, i;
	bool found;
	Sequential SS;

	cout << "The data\n";
	for (i = 0; i < SIZE; i++)
	{
		SS.array[i] = rand() % 300 + 1;
	}

	for (i = 0; i < SIZE; i++)
	{
		cout << SS.array[i] << " ";
	}

	cout << endl;
	cout << "Insert a target, or 0 to stop:";
	cin >> target;

	do {
		found = SS.SequentialSearch(SS.array, SIZE, target, SS.locationWanted);
		if (found)
		{
			cout << "\tFound " << target << " at index " << SS.locationWanted << endl;
		}
		else
		{
			cout << "\t Target not found" << endl;
		}
		cout << "\n Insert a target, or 0 to stop:";
		cin >> target;
	} while (target != 0);
}
